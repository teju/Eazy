apply plugin: 'com.android.library'
android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}



dependencies {

    compile "org.minidns:minidns-core:0.3.1"
    compile project(':library:smack-core')
    compile project(':library:smack-sasl-provided')


}


//apply plugin: 'com.android.application'      android {         compilesdkversion 23         buildtoolsversion "23.0.2"          defaultconfig {             applicationid "com.messenger.bolo"             minsdkversion 14             targetsdkversion 23             versioncode 1             versionname "1.0"             multidexenabled true         }         buildtypes {             release {                 minifyenabled false                 proguardfiles getdefaultproguardfile('proguard-android.txt'), 'proguard-rules.pro'             }          }         sourcesets {             main {                 java {                     exclude 'org/jivesoftware/smack/android/androidsmackinitializer.class'                     exclude '**/androidsmackinitializer.class'                 }             }             androidtest {                 java {                     exclude '**/androidsmackinitializer.class'                     exclude 'org/jivesoftware/smack/android/androidsmackinitializer.class'                  }             }         }          packagingoptions                 {                     exclude 'buildconfig.class'                     exclude 'extensionsinitializer.class'                     exclude 'abstractxmppconnection$8.class'                     exclude 'minidnsresolver.class'                     exclude 'xmpptcpconnection$packetwriter.class'                     exclude 'extensionsinitializer.class'                     exclude 'androidsmackinitializer.class'                     exclude 'xmppstringpreputil.class'                     exclude 'org.jivesoftware.smack.android.androidsmackinitializer.class'                     exclude 'org/jivesoftware/smack/android/androidsmackinitializer.class'                     exclude '**/androidsmackinitializer.class'                 }         configurations {             all*.exclude group: 'org.jivesoftware.smack.android.androidsmackinitializer.class'         }          //uselibrary 'org.apache.http.legacy'     }      dependencies {         compile filetree(include: ['*.jar'], dir: 'libs')         compile 'com.android.support:design:23.1.1'         testcompile 'junit:junit:4.12'         compile 'com.android.support:appcompat-v7:23.1.1'         compile 'com.mcxiaoke.volley:library-aar:1.0.0'         compile 'com.android.support:support-v4:23.1.1'         compile 'org.igniterealtime.smack:smack-im:4.1.5'         compile 'org.igniterealtime.smack:smack-tcp:4.1.5'         compile 'org.igniterealtime.smack:smack-android-extensions:4.1.5'         compile 'org.igniterealtime.smack:smack-extensions:4.1.5'         compile 'org.igniterealtime.smack:smack-core:4.1.5'         compile 'org.igniterealtime.smack:smack-resolver-dnsjava:4.1.5'         compile("com.quickblox:quickblox-android-sdk-core:$rootproject.qbsdkversion@aar") {              exclude module: 'org.igniterealtime.smack:smack-resolver-dnsjava:4.1.6'             exclude module: 'org.igniterealtime.smack:smack-im:4.1.6'             exclude module: 'org.igniterealtime.smack:smack-tcp:4.1.6'             exclude module: 'org.igniterealtime.smack:smack-android-extensions:4.1.6'             exclude module: 'org.igniterealtime.smack:smack-extensions:4.1.6'             exclude module: 'org.igniterealtime.smack:smack-core:4.1.6'             exclude group: "org/jivesoftware/smack/android/**"             exclude group: "org/jivesoftware/smack/android/androidsmackinitializer.class"             exclude group: "org/jivesoftware/smack/android/**"             exclude group: '**/androidsmackinitializer.class'         }         compile("com.quickblox:quickblox-android-sdk-chat:$rootproject.qbsdkversion@aar") {              transitive = true              exclude module: 'org.igniterealtime.smack:smack-resolver-dnsjava:4.1.5'              exclude module: 'org.igniterealtime.smack:smack-im:4.1.5'              exclude module: 'org.igniterealtime.smack:smack-tcp:4.1.5'              exclude module: 'org.igniterealtime.smack:smack-android-extensions:4.1.5'              exclude module: 'org.igniterealtime.smack:smack-extensions:4.1.5'              exclude module: 'org.igniterealtime.smack:smack-core:4.1.5'              exclude group: '**/androidsmackinitializer.class'             //exclude module: 'org.jivesoftware.smack.tcp.xmpptcpconnection$packetwriter.class'        exclude group: "org/jivesoftware/smack/android/androidsmackinitializer.class"         exclude group: "org/jivesoftware/smack/android/**"           }         compile("com.quickblox:quickblox-android-sdk-videochat-webrtc:$rootproject.qbsdkversion@aar") {             //exclude module: 'support-v4'             exclude module: 'org.igniterealtime.smack:smack-resolver-dnsjava:4.1.5'             exclude module: 'org.igniterealtime.smack:smack-im:4.1.5'             exclude module: 'org.igniterealtime.smack:smack-tcp:4.1.5'             exclude module: 'org.igniterealtime.smack:smack-android-extensions:4.1.5'             exclude module: 'org.igniterealtime.smack:smack-extensions:4.1.5'             exclude module: 'org.igniterealtime.smack:smack-core:4.1.5'             exclude group: "org/jivesoftware/smack/android/**"             exclude group: "org/jivesoftware/smack/android/androidsmackinitializer.class"             exclude group: "org/jivesoftware/smack/android/**"             exclude group: '**/androidsmackinitializer.class'           }           compile files('libs/org.apache.http.legacy.jar')      }     task androidreleasejar(type: jar, dependson: assemblerelease) {         "$builddir/intermediates/classes/release/"         exclude 'org/jivesoftware/smack/android/androidsmackinitializer.class'      }
